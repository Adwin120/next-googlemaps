"use client";
import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { Dispatch, Reducer, createContext, useContext, useReducer, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
    title: "nextjs googlemaps",
    description: "Generated by create next app",
};

type LayoutState = {
    isSideBarOpen: boolean;
};
type LayoutActionTypes = "openSideBar" | "closeSideBar" | "toggleSideBar";
type LayoutAction = {
    type: LayoutActionTypes;
};

const layoutReducer: Reducer<LayoutState, LayoutAction> = (state, action) => {
    switch (action.type) {
        case "openSideBar":
            return { ...state, isSideBarOpen: true };
        case "closeSideBar":
            return { ...state, isSideBarOpen: false };
        case "toggleSideBar":
            return {...state, isSideBarOpen: !state.isSideBarOpen}
    }
};
const initialLayoutState: LayoutState = {
    isSideBarOpen: false,
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
    const context = useReducer(layoutReducer, initialLayoutState);

    return (
        <html lang="en">
            <body className={inter.className}>
                <LayoutContext.Provider value={context}>{children}</LayoutContext.Provider>
            </body>
        </html>
    );
}

const LayoutContext = createContext<[LayoutState, Dispatch<LayoutAction>]>([
    initialLayoutState,
    () => {},
]);
export const useLayout = () => useContext(LayoutContext);
